<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classtf_1_1cudaEvent" kind="class" language="C++" prot="public">
    <compoundname>tf::cudaEvent</compoundname>
    <includes refid="cuda__stream_8hpp" local="no">cuda_stream.hpp</includes>
    <innerclass refid="structtf_1_1cudaEvent_1_1cudaEventCreator" prot="private">tf::cudaEvent::cudaEventCreator</innerclass>
    <innerclass refid="structtf_1_1cudaEvent_1_1cudaEventDeleter" prot="private">tf::cudaEvent::cudaEventDeleter</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1cudaEvent_1a3d6f0d82703a9083452e5c140fa24aff" prot="private" static="no" mutable="no">
        <type>cudaEvent_t</type>
        <definition>cudaEvent_t tf::cudaEvent::_event</definition>
        <argsstring></argsstring>
        <name>_event</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="299" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaEvent_1ad0b23cb864f0c7acee306f7fe49a3c23" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::cudaEvent</definition>
        <argsstring>(cudaEvent_t event)</argsstring>
        <name>cudaEvent</name>
        <param>
          <type>cudaEvent_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>constructs an RAII-styled CUDA event object from the given CUDA event </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="242" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1a2865fd7388ef1725e1b59dd3a201f503" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::cudaEvent</definition>
        <argsstring>()</argsstring>
        <name>cudaEvent</name>
        <briefdescription>
<para>constructs an RAII-styled CUDA event object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="247" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1af6d6a9c4f98ae85927985a1f89cdeee1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::cudaEvent</definition>
        <argsstring>(unsigned int flag)</argsstring>
        <name>cudaEvent</name>
        <param>
          <type>unsigned int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>constructs an RAII-styled CUDA event object with the given flag </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="252" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1ad76f10855d56f2706a3d9ed93e47a2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::cudaEvent</definition>
        <argsstring>(const cudaEvent &amp;)=delete</argsstring>
        <name>cudaEvent</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;</type>
        </param>
        <briefdescription>
<para>disabled copy constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1aa63d15089884744a802554352c50d2b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::cudaEvent</definition>
        <argsstring>(cudaEvent &amp;&amp;rhs)</argsstring>
        <name>cudaEvent</name>
        <param>
          <type><ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>move constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="262" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1ac1510f29e6a9cf57933c33feda99735a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::~cudaEvent</definition>
        <argsstring>()</argsstring>
        <name>~cudaEvent</name>
        <briefdescription>
<para>destructs the CUDA event </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="269" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1adfcc20681dd240a017a2fafe6cb4d4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;</type>
        <definition>cudaEvent&amp; tf::cudaEvent::operator=</definition>
        <argsstring>(const cudaEvent &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;</type>
        </param>
        <briefdescription>
<para>disabled copy assignment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1a15672eb08ad6647b84d69e399a9f7677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;</type>
        <definition>cudaEvent&amp; tf::cudaEvent::operator=</definition>
        <argsstring>(cudaEvent &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>move assignment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="281" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="281" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEvent_1a123fe336965738c7bd8027512c052de6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEvent::operator cudaEvent_t</definition>
        <argsstring>() const</argsstring>
        <name>operator cudaEvent_t</name>
        <briefdescription>
<para>implicit conversion to the native CUDA event (cudaEvent_t) </para>        </briefdescription>
        <detaileddescription>
<para>Returns the underlying event of type <computeroutput>cudaEvent_t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="293" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="293" bodyend="295"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to create an RAII-styled wrapper over a native CUDA event </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> object is an RAII-styled wrapper over a native CUDA event (<computeroutput>cudaEvent_t</computeroutput>). A <ref refid="classtf_1_1cudaEvent" kindref="compound">cudaEvent</ref> object is move-only. </para>    </detaileddescription>
    <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="211" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="211" bodyend="300"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaEvent_1a3d6f0d82703a9083452e5c140fa24aff" prot="private" virt="non-virtual"><scope>tf::cudaEvent</scope><name>_event</name></member>
      <member refid="classtf_1_1cudaEvent_1ad0b23cb864f0c7acee306f7fe49a3c23" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>cudaEvent</name></member>
      <member refid="classtf_1_1cudaEvent_1a2865fd7388ef1725e1b59dd3a201f503" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>cudaEvent</name></member>
      <member refid="classtf_1_1cudaEvent_1af6d6a9c4f98ae85927985a1f89cdeee1" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>cudaEvent</name></member>
      <member refid="classtf_1_1cudaEvent_1ad76f10855d56f2706a3d9ed93e47a2e9" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>cudaEvent</name></member>
      <member refid="classtf_1_1cudaEvent_1aa63d15089884744a802554352c50d2b9" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>cudaEvent</name></member>
      <member refid="classtf_1_1cudaEvent_1a123fe336965738c7bd8027512c052de6" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>operator cudaEvent_t</name></member>
      <member refid="classtf_1_1cudaEvent_1adfcc20681dd240a017a2fafe6cb4d4dd" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaEvent_1a15672eb08ad6647b84d69e399a9f7677" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaEvent_1ac1510f29e6a9cf57933c33feda99735a" prot="public" virt="non-virtual"><scope>tf::cudaEvent</scope><name>~cudaEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
